name:                cards-backend
version:             0.0.0
cabal-version:       >=1.24
build-type:          Simple 
category:            Data 
synopsis:            TODO 
description:         
 .
 TODO
 . 
 see the source of "Cards.Backend.Example" for an example.
 .
 transitive dependencies:
 .
 <<cards-backend.png>>

homepage:            http://github.com/sboosali/cards#readme
bug-reports:         http://github.com/sboosali/cards/issues
author:              Spiros Boosalis
maintainer:          samboosalis@gmail.com
copyright:           2018 Spiros Boosalis
license:             BSD3
license-file:        LICENSE
stability:           provisional
tested-with:        
 GHC == 8.0.2

----------------------------------------

-- PVP
-- https://wiki.haskell.org/Package_versioning_policy
-- "A.B is known as the major version number, and C the minor version number."

extra-source-files:
  README.md
  stack.yaml
  .travis.yml
  HLint.hs

----------------------------------------

data-files:
  data/json/AllSets-x.json
  data/json/version.json 

  data/json/RIXSets-z.json

----------------------------------------

source-repository head
  type:     git
  location: https://github.com/sboosali/cards

----------------------------------------

-- make the `template` test suite dump its template-haskell splices
flag dump-splices
  default: False
  manual: True

----------------------------------------

library
 hs-source-dirs:      sources

 ghc-options:  
  -Wall
  -Wcompat

  -- disable
  -Wno-unticked-promoted-constructors

  -- enable
  -Wincomplete-uni-patterns
  -Wincomplete-record-updates
  -Widentities
  -Wmissing-methods

  -- raise a warning into an error
  --TODO -Werror=missing-fields

  -- use `typed-holes`, not `undefined`, during development
  -fdefer-typed-holes
  -Wtyped-holes

 default-language:   Haskell2010
 default-extensions: PackageImports AutoDeriveTypeable DeriveDataTypeable DeriveGeneric
                     DeriveFunctor DeriveFoldable DeriveTraversable
                     LambdaCase EmptyCase TypeOperators PostfixOperators
                     ViewPatterns BangPatterns KindSignatures
                     NamedFieldPuns RecordWildCards TupleSections
                     MultiWayIf DoAndIfThenElse EmptyDataDecls
                     MultiParamTypeClasses FlexibleContexts FlexibleInstances
                     TypeFamilies FunctionalDependencies
                     ScopedTypeVariables StandaloneDeriving

 exposed-modules:
                 Cards.Backend
                 Cards.Backend.Types
                 Cards.Backend.Core		
                 Cards.Backend.Example                
 other-modules:
                 Cards.Backend.Extra            
                 -- Paths_cards_backend
-- autogen-modules:
                 -- Paths_cards_backend

 build-depends:
               base >=4.7 && <5

-- project
             , cards-common
-- mine 
             , spiros             >=0.2
--              , enumerate 

-- ghcjs
             , reflex-dom

-- (extended) standard library 
             , deepseq
             , hashable
             , containers
             , unordered-containers
             , text 
             , bytestring
             , transformers
             , mtl

-- ekmett 
             , exceptions
             , lens

-- other packages 


----------------------------------------

executable example-cards-backend
 hs-source-dirs:      executables
 main-is:             Main.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:
    base
  , cards-backend


-- mtgjson.com
executable mtgjson 
 hs-source-dirs:      executables
 main-is:             DownloadAndUnzip.hs

 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N
 ghc-options:         -fno-warn-missing-signatures -fno-warn-dodgy-exports -fno-warn-unused-imports

 build-depends:
    base
  , zlib
  , tar
  , zip-archive
  , bytestring
  , http-client 
  , http-client-tls
  , http-types 
  , wreq
  , lens
  , lens-aeson

-- ----------------------------------------

-- -- $ stack test documentation
-- test-suite documentation 
--  hs-source-dirs:      tests
--  main-is:             DocTests.hs
--  type:                exitcode-stdio-1.0

--  default-language:    Haskell2010
--  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

--  build-depends:
--     base
--   , cards-backend
--   , doctest


-- -- $ stack test unit
-- test-suite unit
--  hs-source-dirs:      tests
--  main-is:             UnitTests.hs
--  type:                exitcode-stdio-1.0

--  default-language:    Haskell2010
--  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

--  other-modules:
--   Cards.Backend.Test

--  build-depends:
--     base
--   , cards-backend 
--   , tasty
  

-- -- $ stack test properties 
-- test-suite properties 
--  hs-source-dirs:      tests
--  main-is:             PropertyTests.hs

--  type:                exitcode-stdio-1.0
--  default-language:    Haskell2010
--  ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

--  other-modules:
--   Cards.Backend.Property 

--  build-depends:
--     base
--   , cards-backend
--   , QuickCheck 
--   , tasty
--   , tasty-quickcheck


-- -- $ stack test templates 
-- -- Template Haskell 
-- -- Verify that Template Haskell expansion works
-- test-suite templates
--   hs-source-dirs:      tests
--   main-is:             TemplateHaskellTests.hs

--   type:             exitcode-stdio-1.0
--   default-language: Haskell2010
--   ghc-options:      -Wall -threaded

--   if flag(dump-splices)
--     ghc-options: -ddump-splices

--   build-depends:
--       base
--     , cards-backend
--     , lens


-- ----------------------------------------

-- -- $ stack bench 
-- benchmark everything 
--  hs-source-dirs:      benchmarks
--  main-is:             Bench.hs

--  type:             exitcode-stdio-1.0
--  default-language: Haskell2010
--  ghc-options:      -Wall -O2 -threaded -fdicts-cheap -funbox-strict-fields
 
--  build-depends:
--     base
--   , cards-backend
--   , criterion
--   , deepseq


----------------------------------------

-- originally generated with this command:  
-- 
-- $ stack new cards-backend https://raw.githubusercontent.com/sboosali/configuration/master/stack/templates/spirosboosalis.hsfiles -p "module:Cards.Backend" -p "filepath:Cards/Backend"
-- 
-- given this configuration in `~/.stack/config.yaml`: 
-- 
-- templates:
--   params:
--     author-email:    samboosalis@gmail.com 
--     author-name:     Spiros Boosalis 
--     github-username: sboosali 
--     copyright:       2018 Spiros Boosalis  
--     synopsis:        TODO 

